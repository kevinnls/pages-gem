name: Publish to Docker
on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_TAG_IMAGE: "ghcr.io/${{ github.repository }}"

jobs:
  build-debian:
    if: false
    runs-on: ubuntu-latest

    steps:
      - name: setup docker-buildx
        uses: docker/setup-buildx-action@v2

      - name: login to registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: checkout because the image demands it
        uses: actions/checkout@v2

      - name: Get Docker Metadata
        id: meta_debian
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.DOCKER_TAG_IMAGE }}
          tags: |
            type=sha
          flavor:
            latest=true

      - name: Build Debian-based Docker Image
        uses: docker/build-push-action@v3
        with:
          file: Dockerfile
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta_debian.outputs.tags }}
          cache-from: type=registry,ref=${{ env.DOCKER_TAG_IMAGE }}:buildcache-debian
          cache-to: type=registry,ref=${{ env.DOCKER_TAG_IMAGE }}:buildcache-debian,mode=max

  build-alpine:
    runs-on: ubuntu-latest

    steps:
      - name: setup docker-buildx
        uses: docker/setup-buildx-action@v2

      - name: login to registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: checkout because the image demands it
        uses: actions/checkout@v2
      - name: Get Docker Metadata
        id: meta_alpine
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.DOCKER_TAG_IMAGE }}
          tags: |
            type=sha
          flavor: |
            latest=true
            suffix=-alpine,onlatest=true

      - name: Build Alpine-based Docker Image
        uses: docker/build-push-action@v3
        with:
          file: Dockerfile.alpine
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta_alpine.outputs.tags }}
          cache-from: type=registry,ref=${{ env.DOCKER_TAG_IMAGE }}:buildcache-alpine
          cache-to: type=registry,ref=${{ env.DOCKER_TAG_IMAGE }}:buildcache-alpine,mode=max
